$ :: (a -> b) -> a -> b
$ infix right 1
$ = (a b) -> a b

$> :: a -> (a -> b) -> b
$> infix left 0
$> = (a b) -> b a

! :: Boolean -> Boolean
! affix right 5
! = (b) -> not b

name :: Type -> Symbol
name = ?(SimpleType { name = n }) -> n
name = ?(RecordType { name = n }) -> n
name = ?(VariableType { name = n }) -> n
name = ?(AlgebraicType { name = n }) -> n
name = ?(FunctionType { name = n }) -> n
name = ?(UnionType { name = n }) -> n
name = ?(RecursiveType { name = n }) -> n
name = ?(x) -> hurl "#{classOf x}'s type has no name!"

inc :: Integer -> Integer
inc = (x) -> x + 1

dec :: Integer -> Integer
dec = (x) -> x - 1
